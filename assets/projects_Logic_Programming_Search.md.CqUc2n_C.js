import{_ as s,c as a,o as e,ae as n}from"./chunks/framework.6g521mOR.js";const c=JSON.parse('{"title":"Logic Programming & Search","description":"","frontmatter":{"sidebar":false},"headers":[],"relativePath":"projects/Logic_Programming_Search.md","filePath":"projects/Logic_Programming_Search.md"}'),r={name:"projects/Logic_Programming_Search.md"};function t(l,i,h,o,p,k){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="logic-programming-search" tabindex="-1">Logic Programming &amp; Search <a class="header-anchor" href="#logic-programming-search" aria-label="Permalink to &quot;Logic Programming &amp; Search&quot;">​</a></h1><p><strong>Team Members:</strong> Solo project<br><strong>Role:</strong> Full implementation and testing<br><strong>Tools:</strong> Prolog, SWI-Prolog<br><strong>Repository:</strong> <em>(private coursework – can be shared upon request)</em></p><hr><h2 id="project-overview" tabindex="-1">Project Overview <a class="header-anchor" href="#project-overview" aria-label="Permalink to &quot;Project Overview&quot;">​</a></h2><p>This project involved solving complex reasoning problems using <strong>Prolog</strong>, a declarative logic programming language. The focus was on building <strong>recursive rule systems</strong>, conducting <strong>search-based inference</strong>, and handling symbolic representations efficiently.</p><h3 id="key-focus-areas" tabindex="-1">Key Focus Areas: <a class="header-anchor" href="#key-focus-areas" aria-label="Permalink to &quot;Key Focus Areas:&quot;">​</a></h3><ul><li><strong>Search Space Exploration</strong> – Implemented recursive search strategies to traverse problem domains.</li><li><strong>Backtracking &amp; Unification</strong> – Leveraged Prolog’s built-in backtracking for constraint resolution.</li><li><strong>Declarative Thinking</strong> – Shifted away from imperative logic to a rule-based mindset.</li></ul><hr><h2 id="key-contributions" tabindex="-1">Key Contributions <a class="header-anchor" href="#key-contributions" aria-label="Permalink to &quot;Key Contributions&quot;">​</a></h2><ul><li>Designed and implemented <strong>recursive search predicates</strong> for complex problem-solving.</li><li>Developed <strong>custom inference rules</strong> for multi-step logical deductions.</li><li>Practiced <strong>pure Prolog syntax and constraints</strong>, avoiding cuts or impure operations.</li></ul><hr><h2 id="example-logic" tabindex="-1">Example Logic <a class="header-anchor" href="#example-logic" aria-label="Permalink to &quot;Example Logic&quot;">​</a></h2><h3 id="family-tree-reasoning" tabindex="-1">Family Tree Reasoning <a class="header-anchor" href="#family-tree-reasoning" aria-label="Permalink to &quot;Family Tree Reasoning&quot;">​</a></h3><div class="language-prolog vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">prolog</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">john</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">susan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ancestor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parent(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ancestor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parent(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), ancestor(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span></code></pre></div>`,14)]))}const d=s(r,[["render",t]]);export{c as __pageData,d as default};
