import{_ as p,p as f,c as s,o as l,j as e,af as r,e as m,ag as i,t as g,C as b,ae as h,G as u,w as _}from"./chunks/framework.DbV1DCb-.js";const y={class:"riddle"},q={key:0},T={__name:"OverfitRiddle",setup(c){const a=f({q1:"",q2:"",q3:""}),o=f("");function n(){const v=a.value.q1.trim().toLowerCase(),t=a.value.q2.trim().toLowerCase(),d=a.value.q3.trim().toLowerCase();v==="yes"&&t==="yes"&&d==="no"?o.value=`🎉 You got it! 🎉

The model overfit to a single feature: the number of dots.
It learned to say YES only if there are exactly 3 dots — completely ignoring shape and color.

This is what happens when models learn correlations instead of meaning.`:o.value="❌ Not quite — keep trying! You might be overthinking it… or underthinking it 😉"}return(v,t)=>(l(),s("div",y,[t[3]||(t[3]=e("p",null,[e("strong",null,"blue triangle, 3 dots")],-1)),r(e("input",{"onUpdate:modelValue":t[0]||(t[0]=d=>a.value.q1=d),placeholder:"YES / NO / MAYBE"},null,512),[[i,a.value.q1]]),t[4]||(t[4]=e("p",null,[e("strong",null,"red square, 3 dots")],-1)),r(e("input",{"onUpdate:modelValue":t[1]||(t[1]=d=>a.value.q2=d),placeholder:"YES / NO / MAYBE"},null,512),[[i,a.value.q2]]),t[5]||(t[5]=e("p",null,[e("strong",null,"blue triangle, 2 dots")],-1)),r(e("input",{"onUpdate:modelValue":t[2]||(t[2]=d=>a.value.q3=d),placeholder:"YES / NO / MAYBE"},null,512),[[i,a.value.q3]]),e("button",{onClick:n},"Submit"),o.value?(l(),s("pre",q,g(o.value),1)):m("",!0)]))}},w=p(T,[["__scopeId","data-v-e0ca6d59"]]),S=JSON.parse('{"title":"The Model Has Overfit","description":"Can you reverse-engineer this ML model’s logic?","frontmatter":{"title":"The Model Has Overfit","description":"Can you reverse-engineer this ML model’s logic?"},"headers":[],"relativePath":"overfit-riddle.md","filePath":"overfit-riddle.md"}'),C={name:"overfit-riddle.md"},O=Object.assign(C,{setup(c){return(a,o)=>{const n=b("ClientOnly");return l(),s("div",null,[o[0]||(o[0]=h(`<h1 id="🤖-the-model-has-overfit" tabindex="-1" data-v-0227f899>🤖 The Model Has Overfit <a class="header-anchor" href="#🤖-the-model-has-overfit" aria-label="Permalink to &quot;🤖 The Model Has Overfit&quot;" data-v-0227f899>​</a></h1><p data-v-0227f899>You&#39;ve been handed a black-box ML model that was trained on a tiny dataset. It gives one of three outputs:</p><ul data-v-0227f899><li data-v-0227f899>✅ <strong data-v-0227f899>YES</strong> (Confident match)</li><li data-v-0227f899>❓ <strong data-v-0227f899>MAYBE</strong> (Uncertain prediction)</li><li data-v-0227f899>❌ <strong data-v-0227f899>NO</strong> (Out of distribution)</li></ul><p data-v-0227f899>But here&#39;s the thing... the model seems <em data-v-0227f899>weird</em>. Maybe it’s learned the wrong thing?</p><hr data-v-0227f899><h2 id="🧪-training-data" tabindex="-1" data-v-0227f899>🧪 Training Data: <a class="header-anchor" href="#🧪-training-data" aria-label="Permalink to &quot;🧪 Training Data:&quot;" data-v-0227f899>​</a></h2><table tabindex="0" data-v-0227f899><thead data-v-0227f899><tr data-v-0227f899><th data-v-0227f899>Input</th><th data-v-0227f899>Output</th></tr></thead><tbody data-v-0227f899><tr data-v-0227f899><td data-v-0227f899>red triangle, 3 dots</td><td data-v-0227f899>✅ YES</td></tr><tr data-v-0227f899><td data-v-0227f899>blue square, 3 dots</td><td data-v-0227f899>✅ YES</td></tr><tr data-v-0227f899><td data-v-0227f899>green circle, 3 dots</td><td data-v-0227f899>✅ YES</td></tr><tr data-v-0227f899><td data-v-0227f899>red square, 2 dots</td><td data-v-0227f899>❌ NO</td></tr><tr data-v-0227f899><td data-v-0227f899>green triangle, 4 dots</td><td data-v-0227f899>❌ NO</td></tr></tbody></table><hr data-v-0227f899><h2 id="🔍-predict-the-output" tabindex="-1" data-v-0227f899>🔍 Predict the Output: <a class="header-anchor" href="#🔍-predict-the-output" aria-label="Permalink to &quot;🔍 Predict the Output:&quot;" data-v-0227f899>​</a></h2><h2 id="try-to-figure-out-what-the-model-learned-choose-your-predictions-below" tabindex="-1" data-v-0227f899>Try to figure out what the model learned! Choose your predictions below. <a class="header-anchor" href="#try-to-figure-out-what-the-model-learned-choose-your-predictions-below" aria-label="Permalink to &quot;Try to figure out what the model learned! Choose your predictions below.&quot;" data-v-0227f899>​</a></h2><h2 id="title-the-model-has-overfitdescription-can-you-reverse-engineer-this-ml-model-s-logic" tabindex="-1" data-v-0227f899>title: The Model Has Overfit description: Can you reverse-engineer this ML model’s logic? <a class="header-anchor" href="#title-the-model-has-overfitdescription-can-you-reverse-engineer-this-ml-model-s-logic" aria-label="Permalink to &quot;title: The Model Has Overfit
description: Can you reverse-engineer this ML model’s logic?&quot;" data-v-0227f899>​</a></h2>`,11)),u(n,null,{default:_(()=>[u(w)]),_:1}),o[1]||(o[1]=h(`<hr data-v-0227f899><h3 id="💡-hint" tabindex="-1" data-v-0227f899>💡 Hint: <a class="header-anchor" href="#💡-hint" aria-label="Permalink to &quot;💡 Hint:&quot;" data-v-0227f899>​</a></h3><p data-v-0227f899>Don’t overthink it… or do? 😉</p><hr data-v-0227f899><h3 id="🧠-solved-it" tabindex="-1" data-v-0227f899>🧠 Solved it? <a class="header-anchor" href="#🧠-solved-it" aria-label="Permalink to &quot;🧠 Solved it?&quot;" data-v-0227f899>​</a></h3><p data-v-0227f899>If your answers match the model&#39;s predictions:</p><div class="language-txt vp-adaptive-theme" data-v-0227f899><button title="Copy Code" class="copy" data-v-0227f899></button><span class="lang" data-v-0227f899>txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-0227f899><code data-v-0227f899><span class="line" data-v-0227f899><span data-v-0227f899>🎉 You got it! 🎉</span></span>
<span class="line" data-v-0227f899><span data-v-0227f899></span></span>
<span class="line" data-v-0227f899><span data-v-0227f899>The model overfit to a single feature: the number of dots.</span></span>
<span class="line" data-v-0227f899><span data-v-0227f899>It learned to say YES only if there are exactly 3 dots — completely ignoring shape and color.</span></span>
<span class="line" data-v-0227f899><span data-v-0227f899></span></span>
<span class="line" data-v-0227f899><span data-v-0227f899>This is what happens when models learn correlations instead of meaning.</span></span></code></pre></div>`,7))])}}}),x=p(O,[["__scopeId","data-v-0227f899"]]);export{S as __pageData,x as default};
